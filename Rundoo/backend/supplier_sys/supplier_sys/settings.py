"""
Django settings for supplier_sys project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rbx88_n+8z#c#5rw4f3ww#fdj+3x#=a7x*0t6^*+q%v2rmgjim'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'djoser',
    # 'Pillow',
    'accounts',
    'corsheaders',
    'images'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

# Include the CSRF token in the response cookie
# CSRF_COOKIE_NAME = "csrftoken"
# CSRF_COOKIE_SECURE = True
# CSRF_COOKIE_HTTPONLY = True

# Specify the CSRF header name (to match the axios example in the previous response)
# CSRF_HEADER_NAME = "HTTP_X_CSRFTOKEN"

ROOT_URLCONF = 'supplier_sys.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'supplier_sys.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'accounts',
        'USER': 'postgres',
        'PASSWORD': 'dijkstra',
        'HOST': 'localhost',
    },
    # We can set up another database for images here, 
    #   but since it's going to be a small project, 
    #   we can just use the default database for now.
    # 'images_db': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'images',
    #     'USER': 'postgres',
    #     'PASSWORD': 'dijkstra',
    #     'HOST': 'localhost',
    # }
}


EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'beebackend2@gmail.com'
EMAIL_HOST_PASSWORD = 'nmmcotgswdyucedx'
EMAIL_USE_TLS = True


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFIELS_DIRS = [
  os.path.join(BASE_DIR, 'build/static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
      'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
   'AUTH_HEADER_TYPES': ('JWT',),
}

DJOSER = {
  'LOGIN_FIELD': 'email',
  'USER_CREATE_PASSWORD_RETYPE': True,
  'SET_USERNAME_RETYPE': True,
  'SET_PASSWORD_RETYPE': True,
  # 'USERNAME_CHANGED_EMAIL_CONFIRMATION': True,
  # 'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,
  # 'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
  # 'USERNAME_RESET_CONFIRM_URL': 'email/reset/confirm/{uid}/{token}',
  # 'SEND_CONFIRMATION_EMAIL': True,
  # 'ACTIVATION_URL': 'activate/{uid}/{token}',
  # 'SEND_ACTIVATION_EMAIL': True,
  'SERIALIZERS': {
    'user_create': 'accounts.serializers.UserCreateSerializer',
    'user': 'accounts.serializers.UserCreateSerializer',
    'user_delete': 'djoser.serializers.UserDeleteSerializer',
  },
}

AUTH_USER_MODEL = 'accounts.UserAccount'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# CORS_ORIGIN_WHITELIST = [
#     'http://localhost:3000',  # Replace with your frontend's URL
# ]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'